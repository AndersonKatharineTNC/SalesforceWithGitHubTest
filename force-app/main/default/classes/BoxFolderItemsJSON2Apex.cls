//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.
// 
// 	{"total_count":3,"entries":[{"type":"file","id":"230638187456","etag":"0","name":"MD_Kern River Preserve preliminary monitoring report 2016.docx","created_at":"2017-09-27T16:16:20-07:00","created_by":{"type":"user","id":"2652742718","name":"Tester Katharine Anderson","login":"damunchkie5+testbox@gmail.com"},"shared_link":null},{"type":"file","id":"230638184356","etag":"0","name":"MD_Kern River Preserve site visit 28 August 2015.docx","created_at":"2017-09-27T16:16:19-07:00","created_by":{"type":"user","id":"2652742718","name":"Tester Katharine Anderson","login":"damunchkie5+testbox@gmail.com"},"shared_link":null},{"type":"file","id":"230638059786","etag":"0","name":"Posting Authorship pre-2018.csv","created_at":"2017-09-27T16:16:19-07:00","created_by":{"type":"user","id":"2652742718","name":"Tester Katharine Anderson","login":"damunchkie5+testbox@gmail.com"},"shared_link":null}],"offset":0,"limit":100,"order":[{"by":"type","direction":"ASC"},{"by":"name","direction":"ASC"}]}

public class BoxFolderItemsJSON2Apex {
  
	public class Order {
		public String by_Z {get;set;} // in json: by
		public String direction {get;set;} 

		public Order(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'by') {
							by_Z = parser.getText();
						} else if (text == 'direction') {
							direction = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'The order by statement has an unrecognized parameter: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public Integer total_count {get;set;} 
	public List<Entries> entries {get;set;} 
	public Integer offset {get;set;} 
	public Integer limit_Z {get;set;} // in json: limit
	public List<Order> order {get;set;}

	public BoxFolderItemsJSON2Apex(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'total_count') {
						total_count = parser.getIntegerValue();
					} else if (text == 'entries') {
						entries = arrayOfEntries(parser);
					} else if (text == 'offset') {
						offset = parser.getIntegerValue();
					} else if (text == 'limit') {
						limit_Z = parser.getIntegerValue();
					} else if (text == 'order') {
						order = arrayOfOrder(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'The JSON statement has an unrecognized parameter: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Created_by {
		public String type_Z {get;set;} // in json: type
		public String id_Z {get;set;} 
		public String name {get;set;} 
		public String login_Z {get;set;} 

		public Created_by(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'type') {
							type_Z = parser.getText();
						} else if (text == 'id') {
							id_Z = parser.getText();
						} else if (text == 'name') {
							name = parser.getText();
						} else if (text == 'login') {
							login_Z = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'The Created_by statement has an unrecognized parameter: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Entries {
		public String type_Z {get;set;} // in json: type
		public String id_Z {get;set;} 
		public String etag {get;set;} 
		public String name {get;set;} 
		public String created_at_Z {get;set;} 
		public Created_By created_by_Z {get;set;} 
		public String shared_link_Z {get;set;}  

		public Entries(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'type') {
							type_Z = parser.getText();
						} else if (text == 'id') {
							id_Z = parser.getText();
						} else if (text == 'etag') {
							etag = parser.getText();
						} else if (text == 'name') {
							name = parser.getText();
						} else if (text == 'created_at') {
							created_at_Z = parser.getText();
						} else if (text == 'created_by') {
							created_by_Z = new Created_by(parser);
						} else if (text == 'shared_link') {
							shared_link_Z = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'The Entries statement has an unrecognized parameter: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}

	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	



    private static List<Entries> arrayOfEntries(System.JSONParser p) {
        List<Entries> res = new List<Entries>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Entries(p));
        }
        return res;
    }
    
    private static List<Order> arrayOfOrder(System.JSONParser p) {
        List<Order> res = new List<Order>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Order(p));
        }
        return res;
    }
    
    	public static BoxFolderItemsJSON2Apex parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new BoxFolderItemsJSON2Apex(parser);
	}
}